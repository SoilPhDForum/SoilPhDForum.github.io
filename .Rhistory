geom_point() +
scale_color_continuous_qualitative(palette = "Dark3")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_continuous_qualitative(palette = "Dark3")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_continuous_qualitative()
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_qualitative()
?scale_color_discrete_qualitative
hcl_palettes(type = "qualitative")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_qualitative(palette = "Dark 2")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_qualitative(palette = "Dark 3")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_qualitative(palette = "Set 3")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_qualitative(palette = "Set 2")
hcl_palettes()
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_diverging(palette = "Blue-Red 3")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_diverging(palette = "Tofino")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_diverging(palette = "Lisbon")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
scale_color_discrete_diverging(palette = "Berlin")
ggplot(df, aes(gp, y,color=gp)) +
geom_point() +
theme_bw() +
scale_color_discrete_diverging(palette = "Berlin")
ggplot(df, aes(gp, y,color=gp)) +
geom_point(size=4) +
theme_bw() +
scale_color_discrete_diverging(palette = "Berlin")
ggplot(df, aes(gp, y,color=gp)) +
geom_point(size=4) +
theme_bw() +
scale_color_discrete_qualitative(palette = "Set 3")
ggplot(df, aes(gp, y,color=gp)) +
geom_point(size=4) +
theme_bw() +
scale_color_discrete_qualitative(palette = "Set 3",alpha = .6)
ggplot(df, aes(gp, y,color=y)) +
geom_point(size=4) +
theme_bw() +
scale_color_discrete_qualitative(palette = "Set 3",alpha = .6)
ggplot(df, aes(gp, y,color=y)) +
geom_point(size=4) +
theme_bw() +
scale_color_continuous_qualitative(palette = "Set 3",alpha = .6)
ggplot(df, aes(gp, y,color=y)) +
geom_point(size=4) +
theme_bw() +
scale_color_continuous_qualitative(palette = "Set 3")
ggplot(df, aes(gp, y,color=y)) +
geom_point(size=4) +
theme_bw() +
scale_color_continuous_qualitative(palette = "Dark 3")
ggplot(df, aes(gp, y,color=y)) +
geom_point(size=4) +
theme_bw() +
scale_color_continuous_sequential()
745/60
745/5
745/4
745/4/60
?stl
require(graphics)
plot(stl(nottem, "per"))
plot(stl(nottem, s.window = 7, t.window = 50, t.jump = 1))
?filter
?decompose
m <- decompose(co2)
m$figure
plot(m)
?igraph
require(igrpah)
require(igraph)
?igraph
library(ggplot2)
ggpairs(Facebook[,c(112,116,122:126)]
)
install.packages("ggpairs")
?ggpairs
??ggpairs
install.packages("GGally")
?install.packages("GGally")
??ggpairs
install.packages("slidify")
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
carbon.df <- data.frame(class=c("ocean","soil","atmposphere","organism"),
amount=c(38200,2700,780,600))
ggplot(carbon.df,aes(y=amount))+
geom_bar(stat = "identity")
require(ggplot2)
ggplot(carbon.df,aes(y=amount))+
geom_bar(stat = "identity")
ggplot(carbon.df,aes(x=1,y=amount))+
geom_bar(stat = "identity")
ggplot(carbon.df,aes(x=1,y=amount,color=class))+
geom_bar(stat = "identity")
ggplot(carbon.df,aes(x=1,y=amount,fill=class))+
geom_bar(stat = "identity")
ggplot(carbon.df,aes(x=1,y=amount,fill=class))+
geom_bar(stat = "identity")+
scale_fill_continuous_sequential()
require(colorspace)
ggplot(carbon.df,aes(x=1,y=amount,fill=class))+
geom_bar(stat = "identity")+
scale_fill_continuous_sequential()
ggplot(carbon.df,aes(x=1,y=amount,fill=class))+
geom_bar(stat = "identity")+
scale_fill_continuous_diverging()
ggplot(carbon.df,aes(x=1,y=amount,fill=class))+
geom_bar(stat = "identity")+
scale_fill_diverging()
ggplot(carbon.df,aes(x=1,y=amount,fill=class))+
geom_bar(stat = "identity")+
scale_fill_discrete_diverging()
ggplot(carbon.df,aes(x=1,y=amount,fill=class))+
geom_bar(stat = "identity")+
scale_fill_discrete_diverging()+
coord_polar("y", start=0)
carbon <- c(38200,2700,780,600)
names(carbon) <- c("ocean","soil","atmposphere","organism")
pie(carbon)
pie(carbon, col = diverge_hcl(4))
names(carbon) <- c("ocean","soil","atmposphere","organisms")
names(carbon) <- c("Ocean","Soil","Atmposphere","Organisms")
pie(carbon, col = diverge_hcl(4))
carbon <- c(38200,2700,780,600)
names(carbon) <- paste(c("Ocean","Soil","Atmposphere","Organisms"),
carbon,sep="-"  )
pie(carbon, col = diverge_hcl(4),)
pie(carbon, col = diverge_hsv(4),cex=.8)
pie(carbon, col = diverging_hcl(4),cex=.8)
carbon <- c(38200,2700,780,600)
names(carbon) <- paste(c("Ocean","Soil","Atmposphere","Organisms"),
carbon,"GtC",sep=" "  )
pie(carbon, col = diverging_hcl(4),cex=.8)
pie(carbon, col = diverging_hcl(4),cex=1)
carbon1 <- c(1550,950)
names(carbon1) <- paste(c("Organic","Inorganic"),
carbon1,"GtC",sep=" ")
pie(carbon1, col = diverging_hcl(4),cex=1)
pie(carbon1, col = diverging_hcl(4)[2:3],cex=1)
pie(carbon1, col = diverging_hcl(4)[3:2],cex=1)
data <- c(.6,12.6,12,27,7,9,5,1,3,.1,7.7,15.2,9.7)
names(data) <- c("artifical surface","croplands","grassland",
"tree-cover","shrub-cover","herbaceous","mangroves",
"sparse vegetaion","bare soils","snow and glacier")
pie(data)
pie(data)
pie(sort(data))
pie(sort(data),radius = 1,cex=.3)
pie(sort(data),radius = 1,cex=.3,edges = NA)
pie(sort(data),radius = 1,cex=.3,edges = NULL)
pie(sort(data),radius = 1,cex=.3,border = NULL )
pie(sort(data),radius = 1,cex=.3,border = "white" )
pie(sort(data),radius = 1,cex=.3,border = "white",lwd=4 )
pie(sort(data),radius = 1,cex=.6,border = "white")
require(plotrix)
pie.label(data)
?floating.pie
pie(sort(data),radius = 1,cex=.6,border = "white")
pie.labels(labels = names(data))
pie.labels(angle=0,labels = names(data))
pie(sort(data),radius = 1,cex=.6,border = "white",angle=0)
pie(sort(data),radius = 1,cex=.6,border = "white",labels = NA)
require(colorspace)
pie(sort(data),
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white",
labels = NA)
pie.labels(angle=c(60,0),labels = names(data))
pie.labels(angle=c(.2,0),labels = names(data))
pie.labels(angle=c(.5),labels = names(data))
pie.labels(angle=c(3.1),labels = names(data))
pie.labels(angle=c(3.14),labels = names(data))
pie(sort(data),
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white",
labels = NA)
pie(sort(data),
clockwise = FALSE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white",
labels = NA)
pie(sort(data),
clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white",
labels = NA)
pie.labels(angle=c(0),labels = names(data))
data <- sort(data)
pie.labels(angle=c(),labels = names(data))
pie.labels(angle=c(0),labels = names(data))
pie.labels(angle=c(2,3.3,4,5,6,0,.5,.7,.9,),labels = names(data))
pie(sort(data),
clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white",
labels = NA)
pie.labels(angle=c(2,3.3,4,5,6,0,.5,.7,.9),labels = names(data))
pie(sort(data),
clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
pie(sort(data),
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
pie(sort(data),
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
data <- c(.6,12.6,12,27,7,9,5,1,3,.1,7.7,15.2,9.7)
names(data) <- c("artifical surface","croplands","grassland",
"tree-cover","shrub-cover","herbaceous","mangroves",
"sparse vegetaion","bare soils","snow and glacier")
data <- sort(data)
pie(sort(data),
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
data1 <- sort(data)
pie(data1,
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
data1
data <- c(.6,12.6,12,27,7,9,5,1,3,.1,7.7,15.2,9.7)
names(data) <- c("artifical surface","croplands","grassland",
"tree-cover","shrub-cover","herbaceous","mangroves",
"sparse vegetaion","bare soils","snow and glacier")
data
data <- c(.6,12.6,13,27.7,9.5,1.3,.1,7.7,15.2,9.7)
names(data) <- c("artifical surface","croplands","grassland",
"tree-cover","shrub-cover","herbaceous","mangroves",
"sparse vegetaion","bare soils","snow and glacier")
data1 <- sort(data)
pie(data1,
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
data1
pie(data1[-c(1:3)],
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
pie(data1[-c(1:2)],
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
pie(data1[-c(1:2)],
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=.6,
border = "white")
pie(data1[-c(1:2)],
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=1,
border = "white")
names(data) <- c("Artifical surface","Croplands","Grassland",
"Tree-cover","Shrub-cover","Herbaceous","Mangroves",
"Sparse vegetaion","Bare soils","Snow and glacier")
data1 <- sort(data)
pie(data1[-c(1:2)],
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=1,
border = "white")
pie(data1[-c(1:2)],
#clockwise = TRUE,
col=diverge_hcl(12),
radius = 1,
cex=1,
border = "white")
1:5 %>% 3:6
?%>%
?c
means <- data.frame(mod1$parameters$mean, stringsAsFactors = FALSE) %>%
rownames_to_column() %>%
rename(Interest = rowname) %>%
melt(id.vars = "Interest", variable.name = "Profile", value.name = "Mean") %>%
mutate(Mean = round(Mean, 2),
Mean = ifelse(Mean > 1, 1, Mean))
library(reshape2)
means <- data.frame(mod1$parameters$mean, stringsAsFactors = FALSE) %>%
rownames_to_column() %>%
rename(Interest = rowname) %>%
melt(id.vars = "Interest", variable.name = "Profile", value.name = "Mean") %>%
mutate(Mean = round(Mean, 2),
Mean = ifelse(Mean > 1, 1, Mean))
library(tidyverse)
install.packages("tidyverse")
?vegan
library(vegan)
?rda
library(dplyr)
starwars %>%
filter(species == "Droid")
library(reshape2)
library(plyr)
means <- data.frame(mod1$parameters$mean, stringsAsFactors = FALSE) %>%
rownames_to_column() %>%
rename(Interest = rowname) %>%
melt(id.vars = "Interest", variable.name = "Profile", value.name = "Mean") %>%
mutate(Mean = round(Mean, 2),
Mean = ifelse(Mean > 1, 1, Mean))
means %>%
ggplot(aes(Interest, Mean, group = Profile, color = Profile)) +
geom_point(size = 2.25) +
geom_line(size = 1.25) +
scale_x_discrete(limits = c("Active sport", "Adrenaline sports", "Passive sport",
"Countryside, outdoors", "Gardening", "Cars",
"Art exhibitions", "Dancing", "Musical instruments", "Theatre", "Writing", "Reading",
"Geography", "History", "Law", "Politics", "Psychology", "Religion", "Foreign languages",
"Biology", "Chemistry", "Mathematics", "Medicine", "Physics", "Science and technology",
"Internet", "PC",
"Celebrities", "Economy Management", "Fun with friends", "Shopping", "Pets")) +
labs(x = NULL, y = "Standardized mean interest") +
theme_bw(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
starwars
starwars[1,]
starwars %>%
filter(species == "Droid")
?filter
num_range("V", 4:6)
df <- as.data.frame(matrix(runif(100), nrow = 10))
df <- tbl_df(df[c(3, 4, 7, 1, 9, 8, 5, 2, 6, 10)])
select(df, V4:V6)
select(df, num_range("V", 4:6))
starwars %>%
mutate(name, bmi = mass / ((height / 100)  ^ 2))
starwars %>%
mutate(bmi = mass / ((height / 100)  ^ 2))
lag(10)
?lag
(x <- 1:10)
#>  [1]  1  2  3  4  5  6  7  8  9 10
lag(x)
#>  [1] NA  1  2  3  4  5  6  7  8  9
lead(x)
require(plyr)
lead(x)
?lead
require(tidyverse)
?lead
lag(1:6)
lag(c(1,4,5))
lag(c(1,4,5),n = 3)
lag(1:6,3)
lead(1:6,1)
lead(1:6,3)
cumprod(1:5)
cummin(1:5)
cummax(1:5)
cumall(1:5,)
cumall(1:5)
cummean(1:5)
n(1:5)
n()
summarise(count=n())
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
n(1:5)
summarise(n(1:5))
summarise(1:5,n())
runif(5)
rnorm(5)
?forcats
f <- factor(c("a", "b", "c", "d"))
fct_relevel(f)
fct_relevel(f, "c")
fct_relevel(f, "b", "a")
x <- factor(rep(LETTERS[1:9], times = c(40, 10, 5, 27, 1, 1, 1, 1, 1)))
x %>% table()
x %>% fct_lump() %>% table()
x %>% fct_lump() %>% fct_inorder() %>% table()
x
x %>% fct_lump()
x %>% fct_lump(n = 4)
x <- factor(rep(LETTERS[1:9], times = c(40, 10, 5, 27, 1, 1, 1, 1, 1)))
fct_other(x, keep = c("A", "B"))
fct_other(x, drop = c("A", "B"))
rnorm(100) %>%
matrix(ncol = 2) %>%
plot()
rnorm(100) %>%
matrix(ncol = 2) %T>%
plot()
require(magrittr)
rnorm(100) %>%
matrix(ncol = 2) %T>%
plot()
?ns
?splines::ns
ns(x, 5)
require(stats); require(graphics)
ns(women$height, df = 5)
summary(fm1 <- lm(weight ~ ns(height, df = 5), data = women))
## To see what knots were selected
attr(terms(fm1), "predvars")
## example of safe prediction
plot(women, xlab = "Height (in)", ylab = "Weight (lb)")
ht <- seq(57, 73, length.out = 200)
lines(ht, predict(fm1, data.frame(height = ht)))
?modelr
x <- rcauchy(100)
seq_range(x, n = 10)
require(modelr)
x <- rcauchy(100)
seq_range(x, n = 10)
x <- rcauchy(100)
seq_range(x, n = 20)
x <- rcauchy(100)
seq_range(1：10, n = 20)
x <- rcauchy(100)
seq_range(1:10, n = 20)
x <- rcauchy(100)
seq_range(0:10, n = 20)
?seq_range
x <- rcauchy(100)
seq_range(x, n = 10)
seq_range(x, n = 10, trim = 0.1)
seq_range(x, by = 1, trim = 0.1)
x
seq_range(x, by = 2, trim = 0.1)
seq_range(x, by = 2, trim = 1)
seq_range(x, by = 2)
seq_range(x, by = 2,trim=2)
seq_range(x, by = 2,trim=.01)
seq_range(x, by = 2,trim=.2)
seq_range(x, by = 2,trim=.3)
seq_range(x, by = 2,trim=.05)
install.packages("ggtern")
require(ggtern)
?ggtern
demo(ggtern())
demo(ggtern
)
demo("ggtern")
df = data.frame(x = runif(50),
y = runif(50),
z = runif(50),
Value = runif(50,1,10),
Group = as.factor(round(runif(50,1,2))))
ggtern(data=df,aes(x,y,z,color=Group)) +
theme_rgbw() +
geom_point() + geom_path() +
labs(x="X",y="Y",z="Z",title="Title")
?corrplot::corrplot
?glm
require(vegan)
?permatswap
setwd("~/Documents/Github/microbma.github.io")
getwd()
?require(colorspaces)
?colorspaces
?colorspace
?colorspaces
??colorspaces
